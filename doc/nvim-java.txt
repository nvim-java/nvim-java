*nvim-java.txt*        For Neovim >= 0.9.4       Last change: 2023 November 15

==============================================================================
Table of Contents                                *nvim-java-table-of-contents*

1. nvim-java                                             |nvim-java-nvim-java|
  - Features                                              |nvim-java-features|
  - Why                                                        |nvim-java-why|
  - How to Use                                          |nvim-java-how-to-use|
  - APIs                                                      |nvim-java-apis|
  - Projects Acknowledgement              |nvim-java-projects-acknowledgement|

==============================================================================
1. nvim-java                                             *nvim-java-nvim-java*



No need to put up with jdtls <https://github.com/eclipse-jdtls/eclipse.jdt.ls>
nonsense anymore. Just install and start writing `public static void
main(String[] args)`.


FEATURES                                                  *nvim-java-features*

- Diagnostics & Auto Completion
- Automatic DAP <https://github.com/mfussenegger/nvim-dap> debug configuration
- Running tests


WHY                                                            *nvim-java-why*

- Uses nvim-lspconfig <https://github.com/neovim/nvim-lspconfig> to setup `jdtls`
- Realtime server settings updates is possible using neoconf <https://github.com/folke/neoconf.nvim>
- Everything necessary will be installed automatically (except JDKs)
- Uses `jdtls` and auto loads `jdtls` plugins from mason.nvim <https://github.com/williamboman/mason.nvim>
    - Supported plugins are,
        - `lombok`
        - `java-test`
        - `java-debug-adapter`
- Typed & documented APIs
- No callback hells I promise <https://github.com/pyericz/promise-lua>


HOW TO USE                                              *nvim-java-how-to-use*


INSTALL THE PLUGIN ~

Using lazy.nvim <https://github.com/folke/lazy.nvim>

>lua
    return {
      'nvim-java/nvim-java',
      dependencies = {
        'nvim-java/nvim-java-core',
        'neovim/nvim-lspconfig',
        'williamboman/mason.nvim',
        'mfussenegger/nvim-dap',
      },
      event = 'VeryLazy',
      opts = {},
    }
<


SETUP JDTLS LIKE YOU WOULD USUALLY DO ~

>lua
    require('lspconfig').jdtls.setup({})
<

Yep! Thatâ€™s all :)


APIS                                                          *nvim-java-apis*


DAP ~

- `config_dap` - DAP is autoconfigured on start up, but in case you want to force configure it again, you can use this API

>lua
    require('java').dap.config_dap()
<


TEST ~

- `run_current_test_class` - Run the test class in the active buffer

>lua
    require('java').test.run_current_test_class()
<

- `debug_current_test_class` - Debug the test class in the active buffer

>lua
    require('java').test.debug_current_test_class()
<


PROJECTS ACKNOWLEDGEMENT                  *nvim-java-projects-acknowledgement*

nvim-jdtls <https://github.com/mfussenegger/nvim-jdtls> is a plugin that
follows "Keep it simple, stupid!" approach. If you love customizing things by
yourself, then give nvim-jdtls a try. I may or may not have copied some code
;-) Open source is beautiful!

==============================================================================
2. Links                                                     *nvim-java-links*

1. *Neovim*: https://img.shields.io/badge/NeoVim-%2357A143.svg?&style=for-the-badge&logo=neovim&logoColor=white
2. *Lua*: https://img.shields.io/badge/lua-%232C2D72.svg?style=for-the-badge&logo=lua&logoColor=white
3. *Java*: https://img.shields.io/badge/java-%23ED8B00.svg?style=for-the-badge&logo=openjdk&logoColor=white
4. *Gradle*: https://img.shields.io/badge/Gradle-02303A.svg?style=for-the-badge&logo=Gradle&logoColor=white
5. *Apache Maven*: https://img.shields.io/badge/Apache%20Maven-C71A36?style=for-the-badge&logo=Apache%20Maven&logoColor=white

Generated by panvimdoc <https://github.com/kdheepak/panvimdoc>

vim:tw=78:ts=8:noet:ft=help:norl:
